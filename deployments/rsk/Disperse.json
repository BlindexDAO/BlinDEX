{
  "address": "0xF4B1Aef10fc056f82246B2300f6c669901026a9a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "disperseEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "disperseToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x91d144fef21c98839d000025930628174d6125c0f37299ec1b5bdddfb810ab26",
  "receipt": {
    "to": null,
    "from": "0xed701c276f0776fb035f6d8b474AB5ceDfC98c52",
    "contractAddress": "0xF4B1Aef10fc056f82246B2300f6c669901026a9a",
    "transactionIndex": 0,
    "gasUsed": "519914",
    "logsBloom": "0x
    "blockHash": "0x88d3aa539dcd98e43d8d261a7425189dc5dc27e991ed61ad9779029801b171f0",
    "transactionHash": "0x91d144fef21c98839d000025930628174d6125c0f37299ec1b5bdddfb810ab26",
    "logs": [],
    "blockNumber": 4467313,
    "cumulativeGasUsed": "519914",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "fb6a725d8b9cc0fd4f96853e0bbe554f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"disperseEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"disperseToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Utils/disperse.sol\":\"Disperse\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"contracts/Utils/disperse.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract Disperse {\\n    function disperseEther(address[] memory recipients, uint256[] memory values) external payable {\\n        require(recipients.length > 0, \\\"at least one recipient is required\\\");\\n        require(recipients.length == values.length, \\\"recipients length must be equal to values\\\");\\n\\n        for (uint256 i = 0; i < recipients.length; i++) payable(recipients[i]).transfer(values[i]);\\n\\n        uint256 balance = address(this).balance;\\n\\n        if (balance > 0) payable(msg.sender).transfer(balance);\\n    }\\n\\n    function disperseToken(\\n        address erc20Address,\\n        address[] memory recipients,\\n        uint256[] memory values\\n    ) external {\\n        require(recipients.length > 0, \\\"at least one recipient is required\\\");\\n        require(recipients.length == values.length, \\\"recipients length must be equal to values\\\");\\n\\n        uint256 total = 0;\\n        uint256 i;\\n        IERC20 token = IERC20(erc20Address);\\n\\n        for (i = 0; i < recipients.length; i++) total += values[i];\\n\\n        require(token.transferFrom(msg.sender, address(this), total));\\n\\n        for (i = 0; i < recipients.length; i++) require(token.transfer(recipients[i], values[i]));\\n    }\\n}\\n\",\"keccak256\":\"0xb9c0d56afa55db06361d949d2cfa32d4eb81015008e3a2dc91cf1e5dfc455524\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506106d8806100206000396000f3fe6080604052600436106100295760003560e01c8063c73a2d601461002e578063e63d38ed14610050575b600080fd5b34801561003a57600080fd5b5061004e6100493660046104b9565b610063565b005b61004e61005e36600461052d565b61025d565b600082511161008d5760405162461bcd60e51b815260040161008490610591565b60405180910390fd5b80518251146100ae5760405162461bcd60e51b8152600401610084906105d3565b600080845b84518210156100f5578382815181106100ce576100ce61061c565b6020026020010151836100e19190610648565b9250816100ed81610660565b9250506100b3565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016c9190610679565b61017557600080fd5b600091505b845182101561025557806001600160a01b031663a9059cbb8684815181106101a4576101a461061c565b60200260200101518685815181106101be576101be61061c565b60200260200101516040518363ffffffff1660e01b81526004016101f79291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015610216573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023a9190610679565b61024357600080fd5b8161024d81610660565b92505061017a565b505050505050565b600082511161027e5760405162461bcd60e51b815260040161008490610591565b805182511461029f5760405162461bcd60e51b8152600401610084906105d3565b60005b8251811015610329578281815181106102bd576102bd61061c565b60200260200101516001600160a01b03166108fc8383815181106102e3576102e361061c565b60200260200101519081150290604051600060405180830381858888f19350505050158015610316573d6000803e3d6000fd5b508061032181610660565b9150506102a2565b5047801561036057604051339082156108fc029083906000818181858888f1935050505015801561035e573d6000803e3d6000fd5b505b505050565b80356001600160a01b038116811461037c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156103c0576103c0610381565b604052919050565b600067ffffffffffffffff8211156103e2576103e2610381565b5060051b60200190565b600082601f8301126103fd57600080fd5b8135602061041261040d836103c8565b610397565b82815260059290921b8401810191818101908684111561043157600080fd5b8286015b848110156104535761044681610365565b8352918301918301610435565b509695505050505050565b600082601f83011261046f57600080fd5b8135602061047f61040d836103c8565b82815260059290921b8401810191818101908684111561049e57600080fd5b8286015b8481101561045357803583529183019183016104a2565b6000806000606084860312156104ce57600080fd5b6104d784610365565b9250602084013567ffffffffffffffff808211156104f457600080fd5b610500878388016103ec565b9350604086013591508082111561051657600080fd5b506105238682870161045e565b9150509250925092565b6000806040838503121561054057600080fd5b823567ffffffffffffffff8082111561055857600080fd5b610564868387016103ec565b9350602085013591508082111561057a57600080fd5b506105878582860161045e565b9150509250929050565b60208082526022908201527f6174206c65617374206f6e6520726563697069656e7420697320726571756972604082015261195960f21b606082015260800190565b60208082526029908201527f726563697069656e7473206c656e677468206d75737420626520657175616c20604082015268746f2076616c75657360b81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561065b5761065b610632565b500190565b60006001820161067257610672610632565b5060010190565b60006020828403121561068b57600080fd5b8151801515811461069b57600080fd5b939250505056fea2646970667358221220332965a67adedbcd7e5ad2a7594639f8afc5ef4b0ef2d3a8d5b000522274ff6364736f6c634300080d0033",
  "deployedBytecode": "0x6080604052600436106100295760003560e01c8063c73a2d601461002e578063e63d38ed14610050575b600080fd5b34801561003a57600080fd5b5061004e6100493660046104b9565b610063565b005b61004e61005e36600461052d565b61025d565b600082511161008d5760405162461bcd60e51b815260040161008490610591565b60405180910390fd5b80518251146100ae5760405162461bcd60e51b8152600401610084906105d3565b600080845b84518210156100f5578382815181106100ce576100ce61061c565b6020026020010151836100e19190610648565b9250816100ed81610660565b9250506100b3565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016c9190610679565b61017557600080fd5b600091505b845182101561025557806001600160a01b031663a9059cbb8684815181106101a4576101a461061c565b60200260200101518685815181106101be576101be61061c565b60200260200101516040518363ffffffff1660e01b81526004016101f79291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015610216573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023a9190610679565b61024357600080fd5b8161024d81610660565b92505061017a565b505050505050565b600082511161027e5760405162461bcd60e51b815260040161008490610591565b805182511461029f5760405162461bcd60e51b8152600401610084906105d3565b60005b8251811015610329578281815181106102bd576102bd61061c565b60200260200101516001600160a01b03166108fc8383815181106102e3576102e361061c565b60200260200101519081150290604051600060405180830381858888f19350505050158015610316573d6000803e3d6000fd5b508061032181610660565b9150506102a2565b5047801561036057604051339082156108fc029083906000818181858888f1935050505015801561035e573d6000803e3d6000fd5b505b505050565b80356001600160a01b038116811461037c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156103c0576103c0610381565b604052919050565b600067ffffffffffffffff8211156103e2576103e2610381565b5060051b60200190565b600082601f8301126103fd57600080fd5b8135602061041261040d836103c8565b610397565b82815260059290921b8401810191818101908684111561043157600080fd5b8286015b848110156104535761044681610365565b8352918301918301610435565b509695505050505050565b600082601f83011261046f57600080fd5b8135602061047f61040d836103c8565b82815260059290921b8401810191818101908684111561049e57600080fd5b8286015b8481101561045357803583529183019183016104a2565b6000806000606084860312156104ce57600080fd5b6104d784610365565b9250602084013567ffffffffffffffff808211156104f457600080fd5b610500878388016103ec565b9350604086013591508082111561051657600080fd5b506105238682870161045e565b9150509250925092565b6000806040838503121561054057600080fd5b823567ffffffffffffffff8082111561055857600080fd5b610564868387016103ec565b9350602085013591508082111561057a57600080fd5b506105878582860161045e565b9150509250929050565b60208082526022908201527f6174206c65617374206f6e6520726563697069656e7420697320726571756972604082015261195960f21b606082015260800190565b60208082526029908201527f726563697069656e7473206c656e677468206d75737420626520657175616c20604082015268746f2076616c75657360b81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561065b5761065b610632565b500190565b60006001820161067257610672610632565b5060010190565b60006020828403121561068b57600080fd5b8151801515811461069b57600080fd5b939250505056fea2646970667358221220332965a67adedbcd7e5ad2a7594639f8afc5ef4b0ef2d3a8d5b000522274ff6364736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}