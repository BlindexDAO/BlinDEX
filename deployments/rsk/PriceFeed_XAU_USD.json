{
  "address": "0x11F2237a8fc960D1a22cC346CEFcD88B6c14FE11",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_recentPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMaxDayChange_d12",
          "type": "uint256"
        }
      ],
      "name": "MaxDayChangeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "PriceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldUpdater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newUpdater",
          "type": "address"
        }
      ],
      "name": "UpdaterChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUpdateTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxDayChange_d12",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxDayChange_d12",
          "type": "uint256"
        }
      ],
      "name": "setMaxDayChange_d12",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newUpdater",
          "type": "address"
        }
      ],
      "name": "setUpdater",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcd403199d4e02e2d298a7d39b354916580b8fafa9ad4b8e7e45314ea6806c9b8",
  "receipt": {
    "to": null,
    "from": "0x524348A6fD0836Ee4c78F08C62D1BE7594061a8c",
    "contractAddress": "0x11F2237a8fc960D1a22cC346CEFcD88B6c14FE11",
    "transactionIndex": 0,
    "gasUsed": "610662",
    "logsBloom": "0x
    "blockHash": "0x6a081a72529f9c669488099cd9d59fbcb8199dd1ebc90363ee01252bb6d4a5f8",
    "transactionHash": "0xcd403199d4e02e2d298a7d39b354916580b8fafa9ad4b8e7e45314ea6806c9b8",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 4244463,
        "transactionHash": "0xcd403199d4e02e2d298a7d39b354916580b8fafa9ad4b8e7e45314ea6806c9b8",
        "address": "0x11F2237a8fc960D1a22cC346CEFcD88B6c14FE11",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000524348a6fd0836ee4c78f08c62d1be7594061a8c"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x6a081a72529f9c669488099cd9d59fbcb8199dd1ebc90363ee01252bb6d4a5f8"
      }
    ],
    "blockNumber": 4244463,
    "cumulativeGasUsed": "610662",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2A119532248d0E4Ff68A42bB37f64336C3F20872",
    "1922780000000000"
  ],
  "solcInputHash": "5a0c977d732c918ce49ef0ea74613e22",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_recentPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMaxDayChange_d12\",\"type\":\"uint256\"}],\"name\":\"MaxDayChangeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"PriceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldUpdater\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newUpdater\",\"type\":\"address\"}],\"name\":\"UpdaterChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDayChange_d12\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxDayChange_d12\",\"type\":\"uint256\"}],\"name\":\"setMaxDayChange_d12\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newUpdater\",\"type\":\"address\"}],\"name\":\"setUpdater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Oracle/FiatToFiatPseudoOracleFeed.sol\":\"FiatToFiatPseudoOracleFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Oracle/FiatToFiatPseudoOracleFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./IPriceFeed.sol\\\";\\n\\n// We need feeds with fiats prices. For now on RSK chain there are no such feeds.\\n// We populate our own feeds\\ncontract FiatToFiatPseudoOracleFeed is IPriceFeed, Ownable {\\n    uint8 private constant DECIMALS = 12;\\n    uint256 private constant PRICE_PRECISION = 1e12;\\n    uint256 private constant SECONDS_IN_DAY = 60 * 60 * 24;\\n\\n    uint256 private recentPrice;\\n    uint256 public lastUpdateTimestamp;\\n    uint256 public maxDayChange_d12 = 1e11; // 10%\\n\\n    address private updater;\\n\\n    constructor(address _updater, uint256 _recentPrice) {\\n        require(_updater != address(0), \\\"Updater address cannot be 0\\\");\\n\\n        updater = _updater;\\n        recentPrice = _recentPrice;\\n        lastUpdateTimestamp = block.timestamp;\\n    }\\n\\n    function decimals() external pure override returns (uint8) {\\n        return DECIMALS;\\n    }\\n\\n    function price() external view override returns (uint256) {\\n        return recentPrice;\\n    }\\n\\n    function setUpdater(address newUpdater) external onlyOwner {\\n        require(newUpdater != address(0), \\\"Updater cannot be set to the zero address\\\");\\n\\n        address oldUpdater = updater;\\n        updater = newUpdater;\\n        emit UpdaterChanged(oldUpdater, updater);\\n    }\\n\\n    function setPrice(uint256 _price) external onlyUpdaterOrOwner {\\n        if (_msgSender() != owner()) {\\n            uint256 diff = _price > recentPrice ? _price - recentPrice : recentPrice - _price;\\n\\n            uint256 dayChange_d12 = (PRICE_PRECISION * diff * SECONDS_IN_DAY) / recentPrice / (block.timestamp - lastUpdateTimestamp);\\n\\n            require(dayChange_d12 <= maxDayChange_d12, \\\"Price change too big\\\");\\n        }\\n\\n        recentPrice = _price;\\n        lastUpdateTimestamp = block.timestamp;\\n        emit PriceChanged(_price);\\n    }\\n\\n    function setMaxDayChange_d12(uint256 _maxDayChange_d12) external onlyOwner {\\n        maxDayChange_d12 = _maxDayChange_d12;\\n        emit MaxDayChangeChanged(_maxDayChange_d12);\\n    }\\n\\n    modifier onlyUpdaterOrOwner() {\\n        require(_msgSender() == updater || _msgSender() == owner(), \\\"You're not updater\\\");\\n        _;\\n    }\\n\\n    event UpdaterChanged(address indexed oldUpdater, address indexed newUpdater);\\n    event PriceChanged(uint256 indexed newPrice);\\n    event MaxDayChangeChanged(uint256 indexed newMaxDayChange_d12);\\n}\\n\",\"keccak256\":\"0x98b64bfcf32cbb8482f0e6b057ddf185c0d94adbda22e245774fc5f494e6b091\",\"license\":\"MIT\"},\"contracts/Oracle/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface IPriceFeed {\\n    function decimals() external view returns (uint8);\\n\\n    function price() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x99df112eb2a42bfb9241ea930a9b4e7e6285dec18a75fd7af0aa189db67a0d9c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405264174876e80060035534801561001957600080fd5b506040516107b33803806107b383398101604081905261003891610118565b610041336100c8565b6001600160a01b03821661009b5760405162461bcd60e51b815260206004820152601b60248201527f5570646174657220616464726573732063616e6e6f7420626520300000000000604482015260640160405180910390fd5b600480546001600160a01b0319166001600160a01b03939093169290921790915560015542600255610152565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806040838503121561012b57600080fd5b82516001600160a01b038116811461014257600080fd5b6020939093015192949293505050565b610652806101616000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806391b7f5ed1161006657806391b7f5ed146100fc5780639831fbc11461010f5780639d54f41914610122578063a035b1fe14610135578063f2fde38b1461013d57600080fd5b806314bcec9f146100a3578063313ce567146100bf57806368742e0e146100ce578063715018a6146100d75780638da5cb5b146100e1575b600080fd5b6100ac60025481565b6040519081526020015b60405180910390f35b604051600c81526020016100b6565b6100ac60035481565b6100df610150565b005b6000546040516001600160a01b0390911681526020016100b6565b6100df61010a366004610530565b61018f565b6100df61011d366004610530565b610304565b6100df610130366004610549565b610361565b6001546100ac565b6100df61014b366004610549565b610445565b6000546001600160a01b031633146101835760405162461bcd60e51b815260040161017a90610579565b60405180910390fd5b61018d60006104e0565b565b6004546001600160a01b0316336001600160a01b031614806101bb57506000546001600160a01b031633145b6101fc5760405162461bcd60e51b81526020600482015260126024820152712cb7ba93b932903737ba103ab83230ba32b960711b604482015260640161017a565b6000546001600160a01b031633146102cd576000600154821161022c578160015461022791906105c4565b610239565b60015461023990836105c4565b905060006002544261024b91906105c4565b600154620151806102618564e8d4a510006105db565b61026b91906105db565b61027591906105fa565b61027f91906105fa565b90506003548111156102ca5760405162461bcd60e51b81526020600482015260146024820152735072696365206368616e676520746f6f2062696760601b604482015260640161017a565b50505b60018190554260025560405181907fa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d62290600090a250565b6000546001600160a01b0316331461032e5760405162461bcd60e51b815260040161017a90610579565b600381905560405181907f1b385cc6106048a7dca0a143930badfbb586492816fd033085150932635b3cee90600090a250565b6000546001600160a01b0316331461038b5760405162461bcd60e51b815260040161017a90610579565b6001600160a01b0381166103f35760405162461bcd60e51b815260206004820152602960248201527f557064617465722063616e6e6f742062652073657420746f20746865207a65726044820152686f206164647265737360b81b606482015260840161017a565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f662a4a4a892f5f13cf7ee050fdaa045f8641601fdbc843e8a71f418099cacd4e90600090a35050565b6000546001600160a01b0316331461046f5760405162461bcd60e51b815260040161017a90610579565b6001600160a01b0381166104d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161017a565b6104dd816104e0565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561054257600080fd5b5035919050565b60006020828403121561055b57600080fd5b81356001600160a01b038116811461057257600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156105d6576105d66105ae565b500390565b60008160001904831182151516156105f5576105f56105ae565b500290565b60008261061757634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122023a42463f4ed8a802b37a17485c36e7f29fbcfda668ca5169620ca97abfec31864736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c806391b7f5ed1161006657806391b7f5ed146100fc5780639831fbc11461010f5780639d54f41914610122578063a035b1fe14610135578063f2fde38b1461013d57600080fd5b806314bcec9f146100a3578063313ce567146100bf57806368742e0e146100ce578063715018a6146100d75780638da5cb5b146100e1575b600080fd5b6100ac60025481565b6040519081526020015b60405180910390f35b604051600c81526020016100b6565b6100ac60035481565b6100df610150565b005b6000546040516001600160a01b0390911681526020016100b6565b6100df61010a366004610530565b61018f565b6100df61011d366004610530565b610304565b6100df610130366004610549565b610361565b6001546100ac565b6100df61014b366004610549565b610445565b6000546001600160a01b031633146101835760405162461bcd60e51b815260040161017a90610579565b60405180910390fd5b61018d60006104e0565b565b6004546001600160a01b0316336001600160a01b031614806101bb57506000546001600160a01b031633145b6101fc5760405162461bcd60e51b81526020600482015260126024820152712cb7ba93b932903737ba103ab83230ba32b960711b604482015260640161017a565b6000546001600160a01b031633146102cd576000600154821161022c578160015461022791906105c4565b610239565b60015461023990836105c4565b905060006002544261024b91906105c4565b600154620151806102618564e8d4a510006105db565b61026b91906105db565b61027591906105fa565b61027f91906105fa565b90506003548111156102ca5760405162461bcd60e51b81526020600482015260146024820152735072696365206368616e676520746f6f2062696760601b604482015260640161017a565b50505b60018190554260025560405181907fa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d62290600090a250565b6000546001600160a01b0316331461032e5760405162461bcd60e51b815260040161017a90610579565b600381905560405181907f1b385cc6106048a7dca0a143930badfbb586492816fd033085150932635b3cee90600090a250565b6000546001600160a01b0316331461038b5760405162461bcd60e51b815260040161017a90610579565b6001600160a01b0381166103f35760405162461bcd60e51b815260206004820152602960248201527f557064617465722063616e6e6f742062652073657420746f20746865207a65726044820152686f206164647265737360b81b606482015260840161017a565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f662a4a4a892f5f13cf7ee050fdaa045f8641601fdbc843e8a71f418099cacd4e90600090a35050565b6000546001600160a01b0316331461046f5760405162461bcd60e51b815260040161017a90610579565b6001600160a01b0381166104d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161017a565b6104dd816104e0565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561054257600080fd5b5035919050565b60006020828403121561055b57600080fd5b81356001600160a01b038116811461057257600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156105d6576105d66105ae565b500390565b60008160001904831182151516156105f5576105f56105ae565b500290565b60008261061757634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122023a42463f4ed8a802b37a17485c36e7f29fbcfda668ca5169620ca97abfec31864736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1541,
        "contract": "contracts/Oracle/FiatToFiatPseudoOracleFeed.sol:FiatToFiatPseudoOracleFeed",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6844,
        "contract": "contracts/Oracle/FiatToFiatPseudoOracleFeed.sol:FiatToFiatPseudoOracleFeed",
        "label": "recentPrice",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 6846,
        "contract": "contracts/Oracle/FiatToFiatPseudoOracleFeed.sol:FiatToFiatPseudoOracleFeed",
        "label": "lastUpdateTimestamp",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 6849,
        "contract": "contracts/Oracle/FiatToFiatPseudoOracleFeed.sol:FiatToFiatPseudoOracleFeed",
        "label": "maxDayChange_d12",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 6851,
        "contract": "contracts/Oracle/FiatToFiatPseudoOracleFeed.sol:FiatToFiatPseudoOracleFeed",
        "label": "updater",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}